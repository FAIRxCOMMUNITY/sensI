$payload = 'IyBYVFJFWCBTRU5TSSBBSSB2Mi43IChObyBFbW9qaSBWZXJzaW9uKQ0KJEhvc3QuVUkuUmF3VUkuV2luZG93VGl0bGUgPSAiQEZBSVJ4IENPTU1VTklUWSINCkNsZWFyLUhvc3QNCldyaXRlLUhvc3QgIkZBSVJ4IEFEVkFOQ0VEIFNFTlNJVElWSVRZIE9QVElNSVpFUiINCldyaXRlLUhvc3QgIj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iDQpXcml0ZS1Ib3N0ICIiDQoNCiMgUmVmZXJlbmNlIHNldHVwDQokcmVmV2lkdGggPSAzODQwDQokcmVmSGVpZ2h0ID0gMjE2MA0KJHJlZkRQSSA9IDI0MA0KJHJlZlggPSAxLjANCiRyZWZZID0gMS41DQoNCiMgVXNlciBpbnB1dA0KJHVzZXJXaWR0aCA9IFtpbnRdKFJlYWQtSG9zdCAiRW50ZXIgeW91ciBzY3JlZW4gd2lkdGggKGUuZy4sIDE5MjApIikNCiR1c2VySGVpZ2h0ID0gW2ludF0oUmVhZC1Ib3N0ICJFbnRlciB5b3VyIHNjcmVlbiBoZWlnaHQgKGUuZy4sIDEwODApIikNCiR1c2VyRFBJID0gW2ludF0oUmVhZC1Ib3N0ICJFbnRlciB5b3VyIG1vdXNlIERQSSAoZS5nLiwgODAwKSIpDQoNCiMgRXN0aW1hdGUgWC9ZDQokeFNlbnNpID0gW21hdGhdOjpSb3VuZCgoJHJlZldpZHRoIC8gJHVzZXJXaWR0aCkgKiAoJHVzZXJEUEkgLyAkcmVmRFBJKSAqICRyZWZYLCAyKQ0KJHlTZW5zaSA9IFttYXRoXTo6Um91bmQoKCRyZWZIZWlnaHQgLyAkdXNlckhlaWdodCkgKiAoJHVzZXJEUEkgLyAkcmVmRFBJKSAqICRyZWZZLCAyKQ0KDQojIENsYW1wIHRvIHNhZmUgZW11bGF0b3IgcmFuZ2UNCiR4U2Vuc2kgPSBbbWF0aF06Ok1pbihbbWF0aF06Ok1heCgkeFNlbnNpLCAwLjUpLCAyLjApDQokeVNlbnNpID0gW21hdGhdOjpNaW4oW21hdGhdOjpNYXgoJHlTZW5zaSwgMC41KSwgMi41KQ0KDQojIFJlc2V0IG1vdXNlIHNlbnNpdGl2aXR5DQokZGVmYXVsdFNlbnNpID0gMTANClNldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLQ1U6XENvbnRyb2wgUGFuZWxcTW91c2UiIC1OYW1lICJNb3VzZVNlbnNpdGl2aXR5IiAtVmFsdWUgJGRlZmF1bHRTZW5zaQ0KU2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAiSEtDVTpcQ29udHJvbCBQYW5lbFxNb3VzZSIgLU5hbWUgIk1vdXNlU3BlZWQiIC1WYWx1ZSAwDQpydW5kbGwzMi5leGUgdXNlcjMyLmRsbCxVcGRhdGVQZXJVc2VyU3lzdGVtUGFyYW1ldGVycw0KJGN1cnJlbnRTZW5zaSA9ICRkZWZhdWx0U2Vuc2kNCg0KZnVuY3Rpb24gQXBwbHktU2Vuc2l0aXZpdHkgew0KICAgIHBhcmFtKFtpbnRdJHNlbnNpKQ0KICAgICRjbGFtcGVkID0gW01hdGhdOjpNYXgoMSwgW01hdGhdOjpNaW4oJHNlbnNpLCAyMCkpDQogICAgU2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAiSEtDVTpcQ29udHJvbCBQYW5lbFxNb3VzZSIgLU5hbWUgIk1vdXNlU2Vuc2l0aXZpdHkiIC1WYWx1ZSAkY2xhbXBlZA0KICAgIHJ1bmRsbDMyLmV4ZSB1c2VyMzIuZGxsLFVwZGF0ZVBlclVzZXJTeXN0ZW1QYXJhbWV0ZXJzDQogICAgcmV0dXJuICRjbGFtcGVkDQp9DQoNCmZ1bmN0aW9uIEFkanVzdC1Mb2dpYyB7DQogICAgcGFyYW0gKA0KICAgICAgICBbc3RyaW5nXSRmZWVkYmFjaywNCiAgICAgICAgW3JlZl0keCwNCiAgICAgICAgW3JlZl0keSwNCiAgICAgICAgW3JlZl0kc3lzdGVtDQogICAgKQ0KICAgIHN3aXRjaCAoJGZlZWRiYWNrKSB7DQogICAgICAgICcxJyB7DQogICAgICAgICAgICByZXR1cm4gJHRydWUNCiAgICAgICAgfQ0KICAgICAgICAnMicgew0KICAgICAgICAgICAgJHkuVmFsdWUgKz0gMC4wNQ0KICAgICAgICAgICAgJHN5c3RlbS5WYWx1ZSArPSAxDQogICAgICAgIH0NCiAgICAgICAgJzMnIHsNCiAgICAgICAgICAgICR5LlZhbHVlIC09IDAuMDUNCiAgICAgICAgICAgICRzeXN0ZW0uVmFsdWUgLT0gMQ0KICAgICAgICB9DQogICAgICAgICc0JyB7DQogICAgICAgICAgICAkeC5WYWx1ZSAtPSAwLjA1DQogICAgICAgICAgICAkeS5WYWx1ZSAtPSAwLjA1DQogICAgICAgICAgICAkc3lzdGVtLlZhbHVlIC09IDENCiAgICAgICAgfQ0KICAgICAgICAnNScgew0KICAgICAgICAgICAgJHguVmFsdWUgKz0gMC4wNQ0KICAgICAgICAgICAgJHkuVmFsdWUgKz0gMC4wNQ0KICAgICAgICAgICAgJHN5c3RlbS5WYWx1ZSArPSAxDQogICAgICAgIH0NCiAgICB9DQoNCiAgICAjIENsYW1wIHJhbmdlcw0KICAgICR4LlZhbHVlID0gW21hdGhdOjpSb3VuZChbbWF0aF06Ok1pbihbbWF0aF06Ok1heCgkeC5WYWx1ZSwgMC41KSwgMi4wKSwgMikNCiAgICAkeS5WYWx1ZSA9IFttYXRoXTo6Um91bmQoW21hdGhdOjpNaW4oW21hdGhdOjpNYXgoJHkuVmFsdWUsIDAuNSksIDIuNSksIDIpDQogICAgJHN5c3RlbS5WYWx1ZSA9IFttYXRoXTo6TWF4KDEsIFttYXRoXTo6TWluKDIwLCAkc3lzdGVtLlZhbHVlKSkNCg0KICAgIEFwcGx5LVNlbnNpdGl2aXR5IC1zZW5zaSAkc3lzdGVtLlZhbHVlIHwgT3V0LU51bGwNCiAgICByZXR1cm4gJGZhbHNlDQp9DQoNCmZ1bmN0aW9uIFNob3ctUGFuZWwgew0KICAgIHBhcmFtICgkeCwgJHksICRzZW5zaSkNCiAgICBDbGVhci1Ib3N0DQogICAgV3JpdGUtSG9zdCAiRkFJUnggU0VOU0kgQUkgLSBMSVZFIENPTkZJR1VSSU5HIg0KICAgIFdyaXRlLUhvc3QgIj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSINCiAgICBXcml0ZS1Ib3N0ICIgUmVzb2x1dGlvbiAgICAgICAgIDogJHVzZXJXaWR0aCB4ICR1c2VySGVpZ2h0Ig0KICAgIFdyaXRlLUhvc3QgIiBNb3VzZSBEUEkgICAgICAgICAgOiAkdXNlckRQSSINCiAgICBXcml0ZS1Ib3N0ICIiDQogICAgV3JpdGUtSG9zdCAiIEN1cnJlbnQgWCBTZW5zICAgICA6ICR4Ig0KICAgIFdyaXRlLUhvc3QgIiBDdXJyZW50IFkgU2VucyAgICAgOiAkeSINCiAgICBXcml0ZS1Ib3N0ICIgV2luZG93cyBNb3VzZVNwZWVkIDogJHNlbnNpIg0KICAgIFdyaXRlLUhvc3QgIiINCiAgICBXcml0ZS1Ib3N0ICIgRmVlZGJhY2sgT3B0aW9uczoiDQogICAgV3JpdGUtSG9zdCAiICBbMV0gUGVyZmVjdCBIZWFkc2hvdHMiDQogICAgV3JpdGUtSG9zdCAiICBbMl0gTW9zdGx5IEJvZHksIEZldyBIZWFkc2hvdHMiDQogICAgV3JpdGUtSG9zdCAiICBbM10gTW9zdGx5IEhlYWRzaG90cywgU29tZSBCb2R5Ig0KICAgIFdyaXRlLUhvc3QgIiAgWzRdIFRvbyBGYXN0IC8gT3ZlcnNob290aW5nIg0KICAgIFdyaXRlLUhvc3QgIiAgWzVdIFRvbyBTbG93IC8gRHJhZ2dpbmciDQogICAgV3JpdGUtSG9zdCAiIg0KfQ0KDQojIExvb3AgdG8gYWRqdXN0DQpmb3IgKCRpID0gMTsgJGkgLWxlIDIwOyAkaSsrKSB7DQogICAgU2hvdy1QYW5lbCAteCAkeFNlbnNpIC15ICR5U2Vuc2kgLXNlbnNpICRjdXJyZW50U2Vuc2kNCiAgICAkZmVlZGJhY2sgPSBSZWFkLUhvc3QgIkVudGVyIGZlZWRiYWNrICgxLTUpIg0KICAgICRkb25lID0gQWRqdXN0LUxvZ2ljIC1mZWVkYmFjayAkZmVlZGJhY2sgLXggKFtyZWZdJHhTZW5zaSkgLXkgKFtyZWZdJHlTZW5zaSkgLXN5c3RlbSAoW3JlZl0kY3VycmVudFNlbnNpKQ0KICAgIGlmICgkZG9uZSkgew0KICAgICAgICBicmVhaw0KICAgIH0NCiAgICBTdGFydC1TbGVlcCAtTWlsbGlzZWNvbmRzIDUwMA0KfQ0KDQpDbGVhci1Ib3N0DQpXcml0ZS1Ib3N0ICJGQUlSeCBTRU5TSSBBSSAtIEZJTkFMIENPTkZJR1VSQVRJT04iDQpXcml0ZS1Ib3N0ICI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iDQpXcml0ZS1Ib3N0ICIgUmVzb2x1dGlvbiAgICAgICAgIDogJHVzZXJXaWR0aCB4ICR1c2VySGVpZ2h0Ig0KV3JpdGUtSG9zdCAiIE1vdXNlIERQSSAgICAgICAgICA6ICR1c2VyRFBJIg0KV3JpdGUtSG9zdCAiIEZpbmFsIFggU2VucyAgICAgICA6ICR4U2Vuc2kiDQpXcml0ZS1Ib3N0ICIgRmluYWwgWSBTZW5zICAgICAgIDogJHlTZW5zaSINCldyaXRlLUhvc3QgIiBGaW5hbCBNb3VzZSBTcGVlZCAgOiAkY3VycmVudFNlbnNpIg0K';
$decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($payload));
Invoke-Expression $decoded;
